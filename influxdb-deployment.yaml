apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.26.1 (a9d05d509)
  labels:
    io.kompose.service: influxdb
  name: influxdb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: influxdb
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.26.1 (a9d05d509)
      labels:
        io.kompose.service: influxdb
    spec:
      containers:
        - env:
            - name: INFLUXDB_FORECASTS_DB_NAME
              value: forecast_latest
            - name: INFLUXDB_HTTP_MAX_BODY_SIZE
              value: "0"
            - name: INFLUXDB_REALISED_DB_NAME
              value: realised
          image: influxdb:1.7.3-alpine
          name: openstf-influxdb
          ports:
            - containerPort: 8086
          resources: {}
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: influxdb-claim0
      restartPolicy: Always
      volumes:
        - name: influxdb-claim0
          persistentVolumeClaim:
            claimName: influxdb-claim0
status: {}

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.26.1 (a9d05d509)
  labels:
    io.kompose.service: influxdb
  name: influxdb
spec:
  ports:
    - name: "8086"
      port: 8086
      targetPort: 8086
  selector:
    io.kompose.service: influxdb

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: influxdb-claim0
  name: influxdb-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  volumeName: tekton-pv
status: {}