apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.26.1 (a9d05d509)
  labels:
    io.kompose.service: mysql
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.26.1 (a9d05d509)
      labels:
        io.kompose.service: mysql
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: tst_icarus
            - name: MYSQL_ROOT_PASSWORD
              value: root
          image: mysql:5.7
          name: openstf-mysql
          ports:
            - containerPort: 3306
          resources: {}
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: mysql-claim0
      restartPolicy: Always
      volumes:
        - name: mysql-claim0
          persistentVolumeClaim:
            claimName: mysql-claim0
status: {}

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.26.1 (a9d05d509)
  labels:
    io.kompose.service: mysql
  name: mysql
spec:
  ports:
    - name: "3306"
      port: 3306
      targetPort: 3306
  selector:
    io.kompose.service: mysql
status:
  loadBalancer: {}


---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: mysql-claim0
  name: mysql-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  volumeName: tekton-pv
status: {}
